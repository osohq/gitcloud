services:
  caddy:
    image: caddy:latest
    ports:
      - "5000:80"
      - "8081:8081"
    volumes:
      - ./gateway/Caddyfile.local:/etc/caddy/Caddyfile
      # You might need to mount SSL certificates if you're using HTTPS
      # - ./certs:/etc/caddy/certs

  accounts:
    build:
      context: accounts
      dockerfile: Dockerfile
    depends_on:
      - accounts_postgres
      - oso
    environment:
      - OSO_AUTH=e_0123456789_12345_osotesttoken01xiIn
      - OSO_URL=http://oso:8081
      - PRODUCTION_DB=1
      - DATABASE_URL=postgresql://oso:password@accounts_postgres:5432/accounts_db

  jobs:
    build:
      context: jobs
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - OSO_AUTH=e_0123456789_12345_osotesttoken01xiIn
      - OSO_URL=http://oso:8081

  issues:
    build:
      context: issues
      dockerfile: Dockerfile
    depends_on:
      - issues_postgres
      - oso
    environment:
      - OSO_AUTH=e_0123456789_12345_osotesttoken01xiIn
      - OSO_URL=http://oso:8081
      - PRODUCTION_DB=1
      - DATABASE_URL=postgresql://oso:password@issues_postgres:5432/issues_db
      - PYTHONUNBUFFERED=1

  oso:
    build:
      context: oso
      dockerfile: Dockerfile
    volumes:
      - ./oso/data:/data
    environment:
      - OSO_AUTH=e_0123456789_12345_osotesttoken01xiIn
      - OSO_URL=http://localhost:8081

  accounts_postgres:
    image: postgres:14-alpine
    ports:
      - 5433:5432
    volumes:
      - ./accounts-postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=oso
      - POSTGRES_DB=accounts_db

  issues_postgres:
    image: postgres:14-alpine
    ports:
      - 5434:5432
    volumes:
      - ./issues-postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=oso
      - POSTGRES_DB=issues_db
